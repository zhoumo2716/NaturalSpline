// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_P_matrix
arma::mat compute_P_matrix(const arma::vec& x_target, const arma::vec& x_support);
RcppExport SEXP _NaturalSpline_compute_P_matrix(SEXP x_targetSEXP, SEXP x_supportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x_target(x_targetSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x_support(x_supportSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_P_matrix(x_target, x_support));
    return rcpp_result_gen;
END_RCPP
}
// compute_C_withoutTheta
arma::mat compute_C_withoutTheta(const arma::vec& x_support);
RcppExport SEXP _NaturalSpline_compute_C_withoutTheta(SEXP x_supportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x_support(x_supportSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_C_withoutTheta(x_support));
    return rcpp_result_gen;
END_RCPP
}
// compute_A_matrix
arma::mat compute_A_matrix(const arma::vec& x_target, const arma::vec& x_support);
RcppExport SEXP _NaturalSpline_compute_A_matrix(SEXP x_targetSEXP, SEXP x_supportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x_target(x_targetSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x_support(x_supportSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_A_matrix(x_target, x_support));
    return rcpp_result_gen;
END_RCPP
}
// ns_matrix
arma::mat ns_matrix(const arma::vec& x, int m);
RcppExport SEXP _NaturalSpline_ns_matrix(SEXP xSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ns_matrix(x, m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NaturalSpline_compute_P_matrix", (DL_FUNC) &_NaturalSpline_compute_P_matrix, 2},
    {"_NaturalSpline_compute_C_withoutTheta", (DL_FUNC) &_NaturalSpline_compute_C_withoutTheta, 1},
    {"_NaturalSpline_compute_A_matrix", (DL_FUNC) &_NaturalSpline_compute_A_matrix, 2},
    {"_NaturalSpline_ns_matrix", (DL_FUNC) &_NaturalSpline_ns_matrix, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_NaturalSpline(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
